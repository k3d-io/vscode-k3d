on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release
jobs:
  build:
    name: Create and Upload Release
    runs-on: ubuntu-latest
    steps:

      - name: Build info
        id: info
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://npm.pkg.github.com/

      - run: npm install
      - run: npm test

      # - name: Authenticate against GitHub package registry
      #   run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc

      - name: Setup GIT
        run: |
          git switch -c main
          git config --global user.email "alvaro.saurin@gmail.com"
          git config --global user.name "Alvaro Saurin"

      - name: Set release version
        run: npm version --allow-same-version ${{ steps.info.outputs.SOURCE_TAG }}

      - name: Create package project
        uses: lannonbr/vsce-action@master
        with:
          args: "package -o vscode-k3d-${{ steps.info.outputs.SOURCE_TAG }}.vsix"
        env:
          VSCE_TOKEN: ${{ secrets.VSCE_TOKEN }}

      - name: Changelog
        uses: scottbrenner/generate-changelog-action@master
        id: changelog
        env:
          REPO: ${{ github.repository }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.info.outputs.SOURCE_TAG }}
          release_name: Release ${{ steps.info.outputs.SOURCE_TAG }}
          body: |
            ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Upload to GitHub release
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # This pulls from the CREATE RELEASE step above, referencing it's ID to
          # get its outputs object, which include a `upload_url`. See this blog
          # post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./vscode-k3d-${{ steps.info.outputs.SOURCE_TAG }}.vsix
          asset_name: vscode-k3d.vsix
          asset_content_type: application/zip

      - name: Publish package to marketplace
        uses: lannonbr/vsce-action@master
        with:
          args: "publish -p $VSCE_TOKEN"
        env:
          VSCE_TOKEN: ${{ secrets.VSCE_TOKEN }}
